# type: ignore

"""Add timeseries tables

Revision ID: b94894dcf45a
Revises: d5d3bface80d
Create Date: 2023-08-20 14:33:13.870224

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "b94894dcf45a"
down_revision = "d5d3bface80d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ts_guild_count",
        sa.Column("ts", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("ts"),
    )
    op.create_table(
        "ts_command_usage",
        sa.Column("ts", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("guild", sa.BigInteger(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["guild"],
            ["guild.guild_id"],
        ),
        sa.PrimaryKeyConstraint("ts"),
    )
    op.create_table(
        "ts_setting_update",
        sa.Column("ts", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("guild_id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["guild_id"],
            ["guild.guild_id"],
        ),
        sa.PrimaryKeyConstraint("ts"),
    )
    op.create_table(
        "ts_poll_modification",
        sa.Column("ts", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("poll_id", sa.Integer(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["poll_id"],
            ["poll.id"],
        ),
        sa.PrimaryKeyConstraint("ts"),
    )
    op.drop_table("usage")
    # ### end Alembic commands ###

    op.execute("CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;")
    op.execute("SELECT create_hypertable('ts_guild_count','ts');")
    op.execute("SELECT create_hypertable('ts_command_usage','ts');")
    op.execute("SELECT create_hypertable('ts_setting_update','ts');")
    op.execute("SELECT create_hypertable('ts_poll_modification','ts');")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "usage",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("type", postgresql.ENUM("SLASHCOMMAND", name="usagetype"), autoincrement=False, nullable=False),
        sa.Column("details", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("guild_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["guild_id"], ["guild.guild_id"], name="usage_guild_id_fkey"),
        sa.ForeignKeyConstraint(["user_id"], ["user.user_id"], name="usage_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="usage_pkey"),
    )
    op.drop_table("ts_poll_modification")
    op.drop_table("ts_setting_update")
    op.drop_table("ts_command_usage")
    op.drop_table("ts_guild_count")
    # ### end Alembic commands ###
