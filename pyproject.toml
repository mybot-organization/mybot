[tool.bandit]
skips = ["B101"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
combine_as_imports = true
combine_star = true
line_length = 120

[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true

[testenv]
deps = 
    -r requirements.txt
    -r requirements.dev.txt
commands =
    # pytest
    black --check src/
    bandit -r src/ tests/ -c pyproject.toml
    isort ./src/ --check
    pyright src/
"""

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py312"
exclude = ["bin/msgfmt.py", "alembic/**"]

[tool.ruff.lint]
select = [
    "E",
    "F",
    # "UP",
    "B",
    "SIM",
    # "I",
]
extend-select = [
    # "UP", # pyupgrade
]
ignore = [
    # "missing-module-docstring",
    # "missing-class-docstring",
    # "missing-function-docstring",
    # "abstract-method",
    # # "arguments-differ",
    # # "attribute-defined-outside-init",
    # # "duplicate-code",
    # # "eq-without-hash",
    # # "fixme",
    # # "global-statement",
    # # "implicit-str-concat",
    # # "import-error",
    # # "import-self",
    # # "import-star-module-level",
    # # "inconsistent-return-statements",
    # # "invalid-str-codec",
]
# argument-rgx = "^[a-z_][a-z0-9_]{0,30}$"
# attr-rgx = "^[a-z_][a-z0-9_]{0,30}$"
# function-rgx = "^[a-z_][a-z0-9_]{0,30}$"
# method-rgx = '[a-z_][a-z0-9_]{0,30}$'
# variable-rgx = '[a-z_][a-z0-9_]{0,30}$'
# ignore-long-lines = '''(?x)(
# ^\s*(\#\ )?<?https?://\S+>?$|
# ^\s*(from\s+\S+\s+)?import\s+.+$)'''
# indent-string = '    '
dummy-variable-rgx = '^\*{0,2}(_$|unused_|dummy_)'
# callbacks = ['cb_', '_cb']

# [tool.pyright]
# reportImportCycles = false

[tool.ruff.lint.pyflakes]
extend-generics = ["core.Menu"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
# docstring-code-format = true
skip-magic-trailing-comma = false

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.in"] }
optional-dependencies.dev = { file = ["requirements.dev.in"] }
